/*Даны два массива a и b написана функция comp(a, b) (илиcompSame(a, b)), которая проверяет, имеют ли два массива "одинаковые" элементы с одинаковыми кратностями (кратность элемента - это количество раз, когда он появляется). "Одинаковые" здесь означает, что элементы в b являются элементами в a квадрате, независимо от порядка.

Примеры
Допустимые массивы
a = [121, 144, 19, 161, 19, 144, 19, 11]  
b = [121, 14641, 20736, 361, 25921, 361, 20736, 361]
comp(a, b) возвращает true, потому что в b 121 - это квадрат из 11, 14641 - это квадрат из 121, 20736 - квадрат из 144, 361 - квадрат из 19, 25921 - квадрат из 161 и так далее. Это становится очевидным, если мы напишем bэлементы в терминах квадратов:

a = [121, 144, 19, 161, 19, 144, 19, 11] 
b = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]
Недопустимые массивы
Если, например, мы изменим первое число на что-то другое, comp больше не возвращает true:

a = [121, 144, 19, 161, 19, 144, 19, 11]  
b = [132, 14641, 20736, 361, 25921, 361, 20736, 361]
comp(a,b) возвращает false , потому что в b 132 не является квадратом какого-либо числа a.

a = [121, 144, 19, 161, 19, 144, 19, 11]  
b = [121, 14641, 20736, 36100, 25921, 361, 20736, 361]
comp(a,b) возвращает false , потому что в b 36100 не является квадратом какого -либо числа a.

Примечания
a или b может быть [] or {} (все языки, кроме R, Shell).
a или b может быть nil или null или None или nothing (за исключением C ++, COBOL, Crystal, D, Dart, Elixir, Fortran, F #, Haskell, Nim, OCaml, Pascal, Perl, PowerShell, Prolog, PureScript, R, Racket, Rust, Shell, Swift).
Если a или b являются nil (или null or None, в зависимости от языка), проблема не имеет смысла, поэтому верните false .*/

function comp(a1, a2) {
  if (a1 === null || a2 === null) return false;

  for (let i = 0; i < a2.length; i++) {
    const idxA1 = a1.indexOf(Math.sqrt(a2[i]));
    if (idxA1 === -1) return false;
    a1[idxA1] = null;
  }

  return true;
}

console.log(
  comp(
    [121, 144, 19, 161, 19, 144, 19, 11],
    [231, 14641, 20736, 361, 25921, 361, 20736, 361]
  )
);
